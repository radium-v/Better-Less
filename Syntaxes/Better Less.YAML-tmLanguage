# [PackageDev] target_format: plist, ext: tmLanguage
name: Better Less
scopeName: source.less
fileTypes:
- less
uuid: 4BA5F7E1-8D36-4634-8D88-86C0157A8E54

patterns:
- include: '#comment-block'

- include: '#less-namespace-accessors'

- include: '#less-extend'

- include: '#at-rules'

- include: '#less-variable-assignment'

- include: '#property-list'

- include: '#selector'

repository:
  at-charset:
    name: meta.at-rule.charset.less
    begin: \s*((@)charset\b)\s*
    end: \s*((?=;|$))
    captures:
      '1': {name: keyword.control.at-rule.charset.less}
      '2': {name: punctuation.definition.keyword.less}
    patterns:
    - include: '#literal-string'

  at-counter-style:
    name: meta.at-rule.counter-style.less
    begin: \s*((@)counter-style\b)\s+(?:(?i:\b(decimal|none)\b)|(-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*))\s*(?=\{|$)
    end: \s*(\})
    endCaptures:
      '1': {name: punctuation.definition.block.begin.less}
    captures:
      '1': {name: keyword.control.at-rule.counter-style.less}
      '2': {name: punctuation.definition.keyword.less}
      '3': {name: invalid.illegal.counter-style-name.less}
      '4': {name: entity.other.counter-style-name.css}
    patterns:
    - include: '#comment-block'
    - include: '#rule-list'

  at-custom-media:
    name: meta.at-rule.custom-media.less
    begin: (?=\s*@custom-media\b)
    end: \s*(?=;)
    patterns:
    - match: \s*;
      captures:
        '0': {name: punctuation.section.property-list.less}
    - match: \s*((@)custom-media)(?=.*?)
      captures:
        '1': {name: keyword.control.at-rule.custom-media.less}
        '2': {name: punctuation.definition.keyword.less}
        '3': {name: support.constant.custom-media.less}
    - include: '#media-query-list'

  at-font-face:
    name: meta.at-rule.font-face.less
    begin: \s*((@)font-face)\s*(?=\{|$)
    end: \s*(\})
    endCaptures:
      '1': {name: punctuation.definition.block.end.less}
    captures:
      '1': {name: keyword.control.at-rule.font-face.less}
      '2': {name: punctuation.definition.keyword.less}
    patterns:
    - include: '#comment-block'
    - include: '#rule-list'

  at-import:
    name: meta.at-rule.import.less
    begin: \s*((@)import\b)\s*
    beginCaptures:
      '1': {name: keyword.control.at-rule.import.less}
      '2': {name: punctuation.definition.keyword.less}
    end: \;
    endCaptures:
      '0': {name: punctuation.terminator.rule.less}
    patterns:
    - include: '#url-function'
    - include: '#less-variables'
    - begin: (?<=(["'])|(["']\)))\s*
      end: \s*(?=\;)
      patterns:
      - include: '#media-query'
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - name: constant.language.import-directive.less
        match: reference|inline|less|css|once|multiple|optional
      - include: '#comma-delimiter'
    - include: '#literal-string'

  at-keyframes:
    begin: \s*((@)(-webkit-|-moz-|-o-)?keyframes)(?=.*?\{)
    beginCaptures:
      '1': {name: keyword.control.at-rule.keyframe.less}
      '2': {name: punctuation.definition.keyword.less}
      '3': {name: support.type.property-vendor.less}
      '4': {name: support.constant.keyframe.less}
    end: \s*(\})
    endCaptures:
      '1': {name: punctuation.definition.block.end.less}
    patterns:
    - begin: \s*(\{)
      beginCaptures:
        '1': {name: punctuation.definition.block.begin.less}
      end: (?=\})
      patterns:
      - match: \s*(?:(from|to)|((?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(%)))\s*,?\s*
        captures:
          '1': {name: keyword.other.keyframe-selector.less}
          '2': {name: constant.numeric.less}
          '3': {name: keyword.other.unit.less}
      - include: $self
    - name: meta.at-rule.keyframe.less
      begin: \s*(?=[^{;])
      end: \s*(?=\{)
      patterns:
      - include: '#keyframe-name'

  at-media:
    begin: (?=\s*@media\b)
    end: \s*(\})
    endCaptures:
      '1': {name: punctuation.definition.block.end.less}
    patterns:
    - name: meta.at-rule.media.less
      begin: \s*((@)media)
      beginCaptures:
        '1': {name: keyword.control.at-rule.media.less}
        '2': {name: punctuation.definition.keyword.less}
        '3': {name: support.constant.media.less}
      end: \s*(?=\{)
      patterns:
      - include: '#media-query-list'
    - begin: \s*(\{)
      beginCaptures:
        '1': {name: punctuation.definition.block.begin.less}
      end: (?=\})
      patterns:
      - include: '#rule-list-body'
      - include: $self

  at-namespace:
    name: meta.at-rule.namespace.less
    begin: \s*((@)namespace)\s+
    beginCaptures:
      '1': {name: keyword.control.at-rule.namespace.less}
      '2': {name: punctuation.definition.keyword.less}
    end: \;
    endCaptures:
      '0': {name: punctuation.terminator.rule.less}
    patterns:
    - include: '#url-function'
    - include: '#literal-string'
    - name: entity.name.constant.namespace-prefix.less
      match: (-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)

  at-page:
    name: meta.at-rule.page.less
    match: \s*((@)page)\s*(?:(:)(first|left|right))?\s*(?=\{|$)
    captures:
      '1': {name: keyword.control.at-rule.page.less}
      '2': {name: punctuation.definition.keyword.less}
      '3': {name: punctuation.definition.entity.less}
      '4': {name: entity.other.attribute-name.pseudo-class.less}
    patterns:
    - include: '#comment-block'
    - include: '#rule-list'

  at-rules:
    patterns:
    - include: '#at-charset'
    - include: '#at-counter-style'
    - include: '#at-custom-media'
    - include: '#at-font-face'
    - include: '#at-media'
    - include: '#at-import'
    - include: '#at-keyframes'
    - include: '#at-namespace'
    - include: '#at-page'
    - include: '#at-supports'
    - include: '#at-viewport'

  at-supports:
    begin: (?=\s*@supports\b)
    end: (?=\s*)(\})
    endCaptures:
      '1': {name: punctuation.definition.block.end.less}
    patterns:
    - name: meta.at-rule.supports.less
      begin: \s*((@)supports)
      beginCaptures:
        '1': {name: keyword.control.at-rule.supports.less}
        '2': {name: punctuation.definition.keyword.less}
        '3': {name: support.constant.supports.less}
      end: \s*(?=\{)
      patterns:
      - include: '#at-supports-operators'
      - include: '#at-supports-parens'
    - begin: \s*(\{)
      beginCaptures:
        '1': {name: punctuation.section.property-list.begin.less}
      end: (?=\})
      patterns:
      - include: '#rule-list-body'
      - include: $self

  at-supports-operators:
    name: keyword.operator.logic.less
    match: \b(?:and|or|not)\b

  at-supports-parens:
    name: meta.group.less
    begin: \(
    beginCaptures:
      '0': {name: punctuation.definition.group.begin.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - include: '#at-supports-operators'
    - include: '#rule-list-body'
    - include: $self

  at-viewport:
    name: meta.at-rule.viewport.less
    begin: ((@(-ms-)?)viewport)
    beginCaptures:
      '1': {name: keyword.control.at-rule.viewport.less}
      '2': {name: punctuation.definition.keyword.less}
      '3': {name: support.type.vendor-prefix.less}
    end: \}
    endCaptures:
      '0': {name: punctuation.definition.block.end.less}
    patterns:
    - name: meta.block.less
      begin: \{
      end: (?=\})
      captures:
        '0': {name: punctuation.definition.block.begin.less}
      patterns:
      - include: '#rule-list-body'

  attr-function:
    name: meta.function-call.less
    begin: \b(attr)(?=\()
    beginCaptures:
      '1': {name: support.function.filter.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#qualified-name'
      - include: '#literal-string'
      - name: entity.other.attribute-name.less
        begin: (-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
        end: (?=\))
        patterns:
        - name: keyword.other.unit.less
          match: (?x)\b((?i:em|ex|ch|rem)|(?i:vw|vh|vmin|vmax)|(?i:cm|mm|q|in|pt|pc|px|fr)|(?i:deg|grad|rad|turn)|(?i:s|ms)|(?i:Hz|kHz)|(?i:dpi|dpcm|dppx))\b
        - include: '#comma-delimiter'
        - include: '#property-value-constants'
        - include: '#numeric-values'
      - include: '#color-values'

  builtin-functions:
    patterns:
    - include: '#attr-function'
    - include: '#calc-function'
    - include: '#color-functions'
    - include: '#counter-functions'
    - include: '#cross-fade-function'
    - include: '#cubic-bezier-function'
    - include: '#filter-function'
    - include: '#format-function'
    - include: '#gradient-functions'
    - include: '#grid-repeat-function'
    - include: '#image-function'
    - include: '#less-functions'
    - include: '#local-function'
    - include: '#minmax-function'
    - include: '#regexp-function'
    - include: '#shape-functions'
    - include: '#steps-function'
    - include: '#symbols-function'
    - include: '#transform-functions'
    - include: '#url-function'
    - include: '#var-function'

  calc-function:
    name: meta.function-call.less
    begin: \b(calc)(?=\()
    beginCaptures:
      '1': {name: support.function.calc.less}
    end: (?<=\))
    patterns:
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-strings'
      - include: '#var-function'
      - include: '#calc-function'
      - include: '#attr-function'
      - include: '#less-math'

  color-adjuster-operators:
    name: keyword.operator.less
    match: '[\-\+*](?=\s+)'

  color-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(rgba?)(?=\()
      beginCaptures:
        '1': {name: support.function.color.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-strings'
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#type-percentage'
        - include: '#type-number'
    - name: meta.function-call.less
      begin: \b(hs(l|v)a?|hwb)(?=\()
      beginCaptures:
        '1': {name: support.function.color.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-strings'
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#type-angle'
        - include: '#type-percentage'
        - include: '#type-number'
    - include: '#less-color-functions'

  color-values:
    patterns:
    - include: '#color-functions'
    - include: '#less-functions'
    - include: '#less-variables'
    - name: support.constant.color.w3c-standard-color-name.less
      match: \b(aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)\b
    - name: support.constant.color.w3c-extended-color-keywords.less
      match: \b(aliceblue|antiquewhite|aquamarine|azure|beige|bisque|blanchedalmond|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|gainsboro|ghostwhite|gold|goldenrod|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|limegreen|linen|magenta|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|oldlace|olivedrab|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|rebeccapurple|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|thistle|tomato|turquoise|violet|wheat|whitesmoke|yellowgreen)\b
    - name: support.constant.color.w3c-special-color-keyword.less
      match: \b((?i)currentColor|transparent)\b
    - name: constant.other.color.rgb-value.less
      match: (#)(\h{3}|\h{4}|\h{6}|\h{8})\b
      captures:
        '1': {name: punctuation.definition.constant.less}

  comma-delimiter:
    match: \s*(,)\s*
    captures:
      '1': {name: punctuation.separator.less}

  comment-block:
    patterns:
    - name: comment.block.less
      begin: /\*
      beginCaptures:
        '0': {name: punctuation.definition.comment.less}
      end: \*/
      endCaptures:
        '0': {name: punctuation.definition.comment.less}
    - include: '#comment-line'

  comment-line:
    name: comment.line.double-slash.less
    match: (//).*$\n?
    captures:
      '1': {name: punctuation.definition.comment.less}

  counter-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(counter)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-strings'
        - include: '#less-variables'
        - name: entity.other.counter-name.less
          match: (?:--(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))+|-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
        - begin: (?=,)
          end: (?=\))
          patterns:
          - include: '#comma-delimiter'
          - name: support.constant.property-value.counter-style.less
            match: \b((?xi:arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|decimal-leading-zero|decimal|devanagari|disclosure-closed|disclosure-open|disc|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew|hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada|katakana-iroha|katakana|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman)|none)\b
    - name: meta.function-call.less
      begin: \b(counters)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: entity.other.counter-name.less string.unquoted.less
          match: (-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
        - begin: (?=,)
          end: (?=\))
          patterns:
          - include: '#less-strings'
          - include: '#less-variables'
          - include: '#literal-string'
          - include: '#comma-delimiter'
          - name: support.constant.property-value.counter-style.less
            match: \b((?xi:arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal|cjk-earthly-branch|cjk-heavenly-stem|decimal-leading-zero|decimal|devanagari|disclosure-closed|disclosure-open|disc|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew|hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada|katakana-iroha|katakana|khmer|korean-hangul-formal|korean-hanja-formal|korean-hanja-informal|lao|lower-alpha|lower-armenian|lower-greek|lower-latin|lower-roman|malayalam|mongolian|myanmar|oriya|persian|simp-chinese-formal|simp-chinese-informal|square|tamil|telugu|thai|tibetan|trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian|upper-latin|upper-roman)|none)\b

  cross-fade-function:
    patterns:
    - name: meta.function-call.less
      begin: \b(cross-fade)(?=\()
      beginCaptures:
        '1': {name: support.function.image.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-percentage'
        - include: '#color-values'
        - include: '#type-image'
        - include: '#literal-string'
        - include: '#unquoted-string'

  cubic-bezier-function:
    name: meta.function-call.less
    begin: \b(cubic-bezier)(?=\()
    beginCaptures:
      '0': {name: support.function.timing.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#comma-delimiter'
      - include: '#type-number'
      - include: '#less-variables'
      - include: '#var-function'

  custom-property-name:
    name: support.type.custom-property.less
    match: \s*(--)((?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))+)
    captures:
      '1': {name: punctuation.definition.custom-property.less}
      '2': {name: support.type.custom-property.name.less}

  dimensions:
    patterns:
    - include: '#type-angle'
    - include: '#type-frequency'
    - include: '#type-length'
    - include: '#type-resolution'
    - include: '#type-time'

  filter-function:
    name: meta.function-call.less
    begin: \b(filter)(?=\()
    beginCaptures:
      '1': {name: support.function.filter.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#comma-delimiter'
      - include: '#type-image'
      - include: '#literal-string'
      - include: '#filter-functions'

  filter-functions:
    patterns:
    - include: '#less-functions'
    - name: meta.function-call.less
      begin: \b(blur)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-length'
    - name: meta.function-call.less
      begin: \b(brightness|contrast|grayscale|invert|opacity|saturate|sepia)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-percentage'
        - include: '#type-number'
        - include: '#less-functions'
    - name: meta.function-call.less
      begin: \b(drop-shadow)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-length'
        - include: '#color-values'
    - name: meta.function-call.less
      begin: \b(hue-rotate)(?=\()
      beginCaptures:
        '1': {name: support.function.filter.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-angle'

  format-function:
    patterns:
    - name: meta.function-call.less
      begin: \b(format)(?=\()
      beginCaptures:
        '0': {name: support.function.format.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#literal-string'

  gradient-functions:
    patterns:
    - comment: linear-gradient function
      name: meta.function-call.less
      begin: \b((?:repeating-)?linear-gradient)(?=\()
      beginCaptures:
        '1': {name: support.function.gradient.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#var-function'
        - include: '#type-angle'
        - include: '#color-values'
        - include: '#type-percentage'
        - include: '#type-length'
        - include: '#comma-delimiter'
        - name: keyword.other.less
          match: \bto\b
        - name: support.constant.property-value.less
          match: \b(top|right|bottom|left)\b
    - comment: radial-gradient function
      name: meta.function-call.less
      begin: \b((?:repeating-)?radial-gradient)(?=\()
      beginCaptures:
        '1': {name: support.function.gradient.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#var-function'
        - include: '#color-values'
        - include: '#type-percentage'
        - include: '#type-length'
        - include: '#comma-delimiter'
        - name: keyword.other.less
          match: \b(at|circle|ellipse)\b
        - name: support.constant.property-value.less
          match: \b(top|right|bottom|left|center|(farthest|closest)-(corner|side))\b
    - comment: conic-gradient function
      name: meta.function-call.less
      begin: \b((?:repeating-)?conic-gradient)(?=\()
      beginCaptures:
        '1': {name: support.function.gradient.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#var-function'
        - include: '#color-values'
        - include: '#type-length'
        - include: '#type-percentage'
        - include: '#type-angle'
        - include: '#comma-delimiter'
        - name: keyword.other.less
          match: \b(at|from)\b
        - name: support.constant.property-value.less
          match: \b(top|right|bottom|left|center)\b

  grid-repeat-function:
    name: meta.function-call.less
    begin: \b(repeat)(?=\()
    beginCaptures:
      '1': {name: support.function.grid.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#comma-delimiter'
      - include: '#var-function'
      - include: '#type-length'
      - include: '#type-percentage'
      - include: '#minmax-function'
      - include: '#type-integer'
      - name: support.keyword.repetitions.less
        match: \b(auto-(fill|fit))\b
      - name: support.constant.property-value.less
        match: \b(((max|min)-content)|auto)\b

  image-function:
    name: meta.function-call.less
    begin: \b(image)(?=\()
    beginCaptures:
      '1': {name: support.function.image.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#type-image'
      - include: '#literal-string'
      - include: '#color-values'
      - include: '#comma-delimiter'
      - include: '#unquoted-string'

  keyframe-name:
    begin: \s*(-?(?:[_a-z]|[^\x{00}-\x{7F}]|(?:(:?\\[0-9a-f]{1,6}(\r\n|\s)?)|\\[^\r\n\f0-9a-f]))(?:[_a-z0-9-]|[^\x{00}-\x{7F}]|(?:(:?\\[0-9a-f]{1,6}(\r\n|\s)?)|\\[^\r\n\f0-9a-f]))*)?
    beginCaptures:
      '1': {name: variable.other.constant.animation-name.less}
    end: \s*(?:(,)|(?=[{;]))
    endCaptures:
      '1': {name: punctuation.definition.arbitrary-repetition.less}

  less-boolean-function:
    name: meta.function-call.less
    begin: \b(boolean)(?=\()
    beginCaptures:
      '1': {name: support.function.boolean.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#less-logical-comparisons'

  less-color-blend-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(multiply|screen|overlay|(soft|hard)light|difference|exclusion|negation|average)(?=\()
      beginCaptures:
        '1': {name: support.function.color-blend.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#color-values'

  less-color-channel-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(hue|saturation|lightness|hsv(hue|saturation|value)|red|green|blue|alpha|luma|luminance)(?=\()
      beginCaptures:
        '1': {name: support.function.color-definition.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'

  less-color-definition-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(argb)(?=\()
      beginCaptures:
        '1': {name: support.function.color-definition.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#color-values'

  less-color-functions:
    patterns:
    - include: '#less-color-blend-functions'
    - include: '#less-color-channel-functions'
    - include: '#less-color-definition-functions'
    - include: '#less-color-operation-functions'

  less-color-operation-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(fade|shade|tint)(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
        - include: '#comma-delimiter'
        - include: '#type-percentage'
    - name: meta.function-call.less
      begin: \b(spin)(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
        - include: '#comma-delimiter'
        - include: '#type-number'
    - name: meta.function-call.less
      begin: \b(((de)?saturate)|((light|dark)en)|(fade(in|out)))(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
        - include: '#comma-delimiter'
        - include: '#type-percentage'
        - name: constant.language.relative.less
          match: \brelative\b
    - name: meta.function-call.less
      begin: \b(contrast)(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
        - include: '#comma-delimiter'
        - include: '#type-percentage'
    - name: meta.function-call.less
      begin: \b(greyscale)(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
    - name: meta.function-call.less
      begin: \b(mix)(?=\()
      beginCaptures:
        '1': {name: support.function.color-operation.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#color-values'
        - include: '#comma-delimiter'
        - include: '#less-math'
        - include: '#type-percentage'

  less-extend:
    name: meta.function-call.less
    begin: (:)(extend)(?=\()
    beginCaptures:
      '1': {name: punctuation.definition.entity.less}
      '2': {name: entity.other.attribute-name.pseudo-class.extend.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - name: constant.language.all.less
        match: \ball\b
      - include: '#selectors'

  less-functions:
    patterns:
    - include: '#less-boolean-function'
    - include: '#less-color-functions'
    - include: '#less-if-function'
    - include: '#less-list-functions'
    - include: '#less-math-functions'
    - include: '#less-misc-functions'
    - include: '#less-string-functions'
    - include: '#less-type-functions'

  less-if-function:
    name: meta.function-call.less
    begin: \b(if)(?=\()
    beginCaptures:
      '1': {name: support.function.if.less}
    end: (?<=\))
    patterns:
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-mixin-guards'
      - include: '#comma-delimiter'
      - include: '#property-values'

  less-list-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(length)(?=\()\b
      beginCaptures:
        '1': {name: support.function.length.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#property-values'
        - include: '#comma-delimiter'
    - name: meta.function-call.less
      begin: \b(extract)(?=\()\b
      beginCaptures:
        '1': {name: support.function.extract.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#property-values'
        - include: '#comma-delimiter'
        - include: '#type-integer'
    - name: meta.function-call.less
      begin: \b(range)(?=\()\b
      beginCaptures:
        '1': {name: support.function.range.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#property-values'
        - include: '#comma-delimiter'
        - include: '#type-integer'

  less-logical-comparisons:
    patterns:
    - match: \s*(=|((<|>)=?))\s*
      captures:
        '1': {name: keyword.operator.logical.less}
    - contentName: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-logical-comparisons'
    - name: constant.language.less
      match: \btrue|false\b
    - name: punctuation.separator.less
      match: ','
    - include: '#property-values'
    - include: '#selectors'
    - include: '#unquoted-string'

  less-math:
    patterns:
    - name: keyword.operator.arithmetic.less
      match: '[-\+\*\/]'
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-math'
    - include: '#numeric-values'
    - include: '#less-variables'

  less-math-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(ceil|floor|percentage|round|sqrt|abs|a?(sin|cos|tan))(?=\()
      beginCaptures:
        '1': {name: support.function.math.less}
      end: (?<=\))
      patterns:
      - name: meta.group.less
        begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: \)
        endCaptures:
          '0': {name: punctuation.definition.group.end.less}
        patterns:
        - include: '#less-variables'
        - include: '#numeric-values'
    - name: meta.function-call.less
      match: ((pi)(\()(\)))
      captures:
        '2': {name: support.function.math.less}
        '3': {name: punctuation.definition.group.begin.less}
        '4': {name: punctuation.definition.group.end.less}
    - name: meta.function-call.less
      begin: \b(pow|m(od|in|ax))(?=\()
      beginCaptures:
        '1': {name: support.function.math.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#numeric-values'
        - include: '#comma-delimiter'

  less-misc-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(color)(?=\()
      beginCaptures:
        '1': {name: support.function.color.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#literal-string'
    - name: meta.function-call.less
      begin: \b(image-(size|width|height))(?=\()
      beginCaptures:
        '1': {name: support.function.image.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#literal-string'
        - include: '#unquoted-string'
    - name: meta.function-call.less
      begin: \b(convert|unit)(?=\()
      beginCaptures:
        '1': {name: support.function.convert.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#dimensions'
        - include: '#numeric-values'
        - include: '#literal-string'
        - include: '#comma-delimiter'
        - name: keyword.other.unit.less
          match: ((c|m)?m|in|p(t|c|x)|m?s|g?rad|deg|turn|%|r?em|ex|ch)
    - name: meta.function-call.less
      begin: \b(data-uri)(?=\()
      beginCaptures:
        '1': {name: support.function.data-uri.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#literal-string'
        - match: \s*(?:(,))
          captures:
            '1': {name: punctuation.separator.less}
    - name: support.function.default.less
      match: \b(default(\()(\)))\b
      captures:
        '2': {name: punctuation.definition.group.begin.less}
        '3': {name: punctuation.definition.group.end.less}
    - name: meta.function-call.less
      begin: \b(get-unit)(?=\()
      beginCaptures:
        '1': {name: support.function.get-unit.less}
      end: (?<=\))
      patterns:
      - name: meta.group.less
        begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: \)
        endCaptures:
          '0': {name: punctuation.definition.group.end.less}
        patterns:
        - include: '#dimensions'
    - name: meta.function-call.less
      begin: \b(svg-gradient)(?=\()
      beginCaptures:
        '1': {name: support.function.svg-gradient.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-angle'
        - include: '#comma-delimiter'
        - include: '#color-values'
        - include: '#type-percentage'
        - include: '#type-length'
        - name: keyword.other.less
          match: \bto\b
        - name: support.constant.property-value.less
          match: \b(top|right|bottom|left|center)\b
        - name: keyword.other.less
          match: \b(at|circle|ellipse)\b

  less-mixin-guards:
    patterns:
    - begin: \s*(and|not|or)?\s*(?=\()
      beginCaptures:
        '1': {name: keyword.operator.logical.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - name: meta.group.less
        begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variable-comparison'
        - name: support.function.default.less
          match: default((\()(\)))
          captures:
            '1': {name: meta.group.less}
            '2': {name: punctuation.definition.group.begin.less}
            '3': {name: punctuation.definition.group.end.less}
        - include: '#property-values'
        - include: '#less-logical-comparisons'
        - include: $self

  less-namespace-accessors:
    patterns:
    - name: meta.conditional.guarded-namespace.less
      begin: (?=\s*when\b)
      end: \s*(?:(,)|(?=[{;]))
      endCaptures:
        '1': {name: punctuation.definition.block.end.less}
      patterns:
      - match: \s*(when)(?=.*?)
        captures:
          '1': {name: keyword.control.conditional.less}
          '2': {name: punctuation.definition.keyword.less}
      - include: '#less-mixin-guards'
      - include: '#comma-delimiter'
      - name: meta.block.less
        begin: \s*(\{)
        beginCaptures:
          '1': {name: punctuation.section.property-list.begin.less}
        end: (?=\})
        patterns:
        - include: '#rule-list-body'
      - include: '#selectors'
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-variable-assignment'
      - include: '#comma-delimiter'
      - match: \s*(;)|(?=[})])
        captures:
          '1': {name: punctuation.terminator.rule.less}
      - include: '#property-values'
      - include: '#rule-list-body'

  less-number-units:
    patterns:
    - name: keyword.other.unit.less
      match: \b((c|m)?m|in|p(t|c)|m?s|g?rad|deg|turn)\b
    - match: \b(r?em|ex|ch|vw|vh|vmin|vmax|cm|mm|q|in|pt|pc|px|fr|s|ms|Hz|kHz|dpi|dpcm|dppx|deg|grad|rad|turn)\b

  less-string-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(e(scape)?)(?=\()\b
      beginCaptures:
        '1': {name: support.function.escape.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#literal-string'
        - include: '#unquoted-string'
    - name: meta.function-call.less
      begin: \s*(%)(?=\()\s*
      beginCaptures:
        '1': {name: support.function.format.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#literal-string'
        - include: '#property-values'
    - name: meta.function-call.less
      begin: \b(replace)(?=\()\b
      beginCaptures:
        '1': {name: support.function.replace.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'
        - include: '#comma-delimiter'
        - include: '#literal-string'
        - include: '#property-values'

  less-strings:
    patterns:
    - name: string.quoted.other.less
      contentName: markup.raw.inline.less
      begin: (~)('|")
      beginCaptures:
        '1': {name: constant.character.escape.less}
        '2': {name: punctuation.definition.string.begin.less}
      end: ('|")|(\n)
      endCaptures:
        '1': {name: punctuation.definition.string.end.less}
        '2': {name: invalid.illegal.newline.less}
      patterns:
      - include: '#string-content'

  less-type-functions:
    patterns:
    - name: meta.function-call.less
      begin: \bis(?:number|string|color|keyword|url|pixel|em|percentage|ruleset)(?=\()
      beginCaptures:
        '0': {name: support.function.type.less}
      end: (?<=\))
      patterns:
      - name: meta.group.less
        begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: \)
        endCaptures:
          '0': {name: punctuation.definition.group.end.less}
        patterns:
        - include: '#property-values'
    - name: meta.function-call.less
      begin: \b(isunit)(?=\()
      beginCaptures:
        '1': {name: support.function.type.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#property-values'
        - include: '#comma-delimiter'
        - name: keyword.other.unit.less
          match: (?x)\b((?i:em|ex|ch|rem)|(?i:vw|vh|vmin|vmax)|(?i:cm|mm|q|in|pt|pc|px|fr)|(?i:deg|grad|rad|turn)|(?i:s|ms)|(?i:Hz|kHz)|(?i:dpi|dpcm|dppx))\b
    - name: meta.function-call.less
      begin: \b(isdefined)(?=\()
      beginCaptures:
        '1': {name: support.function.type.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#less-variables'

  less-variable-assignment:
    patterns:
    - name: meta.property-value.less
      begin: (@)(-?(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
      beginCaptures:
        '0': {name: variable.other.readwrite.less}
        '1': {name: punctuation.definition.variable.less}
        '2': {name: support.other.variable.less}
      end: \s*(;|(\.{3})|(?=\)))
      endCaptures:
        '1': {name: punctuation.terminator.rule.less}
        '2': {name: keyword.operator.spread.less}
      patterns:
      - match: (((\+_?)?):)([\s\t]*)
        captures:
          '1': {name: punctuation.separator.key-value.less}
          '4': {name: meta.property-value.less}
      - include: '#property-values'
      - include: '#comma-delimiter'
      - include: '#property-list'
      - include: '#unquoted-string'

  less-variable-comparison:
    patterns:
    - begin: (@{1,2})([-]?([_a-z]|[^\x{00}-\x{7F}]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
      beginCaptures:
        '0': {name: variable.other.readwrite.less}
        '1': {name: punctuation.definition.variable.less}
        '2': {name: support.other.variable.less}
      end: \s*(?=\))
      endCaptures:
        '1': {name: punctuation.terminator.rule.less}
      patterns:
      - match: \s*(=|((<|>)=?))\s*
        captures:
          '1': {name: keyword.operator.logical.less}
      - name: constant.language.less
        match: \btrue\b
      - include: '#property-values'
      - include: '#selectors'
      - include: '#unquoted-string'
      - name: punctuation.separator.less
        match: ','

  less-variable-interpolation:
    name: variable.other.readwrite.less
    match: (@)(\{)([-\w]+)(\})
    captures:
      '1': {name: punctuation.definition.variable.less}
      '2': {name: punctuation.definition.expression.less}
      '3': {name: support.other.variable.less}
      '4': {name: punctuation.definition.expression.less}

  less-variables:
    name: variable.other.readwrite.less
    match: \s*(@@?)([-\w]+)
    captures:
      '1': {name: punctuation.definition.variable.less}
      '2': {name: support.other.variable.less}

  literal-string:
    patterns:
    - name: string.quoted.single.less
      begin: ''''
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.less}
      end: (')|(\n)
      endCaptures:
        '1': {name: punctuation.definition.string.end.less}
        '2': {name: invalid.illegal.newline.less}
      patterns:
      - include: '#string-content'
    - name: string.quoted.double.less
      begin: '"'
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.less}
      end: (")|(\n)
      endCaptures:
        '1': {name: punctuation.definition.string.end.less}
        '2': {name: invalid.illegal.newline.less}
      patterns:
      - include: '#string-content'
    - include: '#less-strings'

  local-function:
    name: meta.function-call.less
    begin: \b(local)(?=\()
    beginCaptures:
      '0': {name: support.function.font-face.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#unquoted-string'

  media-query:
    begin: \s*(only|not)?\s*(all|aural|braille|embossed|handheld|print|projection|screen|tty|tv)?
    beginCaptures:
      '1': {name: keyword.operator.logic.media.less}
      '2': {name: support.constant.media.less}
    end: \s*(?:(,)|(?=[{;]))
    endCaptures:
      '1': {name: punctuation.definition.arbitrary-repetition.less}
    patterns:
    - include: '#less-variables'
    - include: '#custom-property-name'
    - name: meta.group.less
      begin: \s*(and)?\s*(\()\s*
      beginCaptures:
        '1': {name: keyword.operator.logic.media.less}
        '2': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: ((-webkit-|-o-)?((min|max)-)?(-moz-)?(((device-)?(height|width|aspect-ratio|pixel-ratio))|(color(-index)?)|monochrome|resolution))|grid|scan|orientation\s*(?=[:)])
        beginCaptures:
          '0': {name: support.type.property-name.media.less}
          '2': {name: support.type.vendor-prefix.less}
          '5': {name: support.type.vendor-prefix.less}
        end: (((\+_?)?):)|(?=\))
        endCaptures:
          '1': {name: punctuation.separator.key-value.less}
      - name: support.constant.property-value.less
        match: \b(portrait|landscape|progressive|interlace)
      - match: \s*(\d+)(/)(\d+)
        captures:
          '1': {name: constant.numeric.less}
          '2': {name: keyword.operator.arithmetic.less}
          '3': {name: constant.numeric.less}
      - include: '#less-math'

  media-query-list:
    begin: \s*(?=[^{;])
    end: \s*(?=[{;])
    patterns:
    - include: '#media-query'

  minmax-function:
    name: meta.function-call.less
    begin: \b(minmax)(?=\()
    beginCaptures:
      '1': {name: support.function.grid.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#less-variables'
      - include: '#type-length'
      - include: '#comma-delimiter'
      - name: support.constant.property-value.less
        match: \b(max-content|min-content)\b

  numeric-values:
    patterns:
    - include: '#dimensions'
    - include: '#type-percentage'
    - include: '#type-number'

  property-list:
    patterns:
    - begin: (?=(?=[^;]*)\{)
      end: \}
      endCaptures:
        '0': {name: punctuation.definition.block.end.less}
      patterns:
      - include: '#rule-list'

  property-value:
    patterns:
    - match: (((\+_?)?):)([\s\t]*)
      captures:
        '1': {name: punctuation.separator.key-value.less}
        '4': {name: meta.property-value.less}
    - include: '#less-variable-interpolation'

  property-value-constants:
    patterns:
    - comment: Global Values
      name: support.constant.property-value.less
      match: \b(inherit|initial|revert(-layer)?|unset)\b
    - comment: border properties
      name: support.constant.property-value.less
      match: |-
        (?x)\b(
          border-(block|inline)(-(start|end))?(-(color|style|width))?
          | border-(left|right)(-(color|style|width))?
          | border-(bottom|top)(-(color|style|width|(left|right)-radius))?
          | border(-(collapse|color|radius|spacing|style|width))
          | border-((end|start)-){2}radius
          | border-image(-(outset|repeat|slice|source|width))?
          | border(?!-)
        )\b
    - comment: position property values
      name: support.constant.property-value.less
      match: \b(absolute|relative|static|sticky)\b
    - comment: inset/position property names (as values)
      name: support.constant.property-value.less
      match: \binset-(block|inline)(-(start|end))?\b
    - comment: list-style-type values
      name: support.constant.property-value.less
      match: |
        (?xi)\b(
          arabic-indic|armenian|bengali|cambodian|circle|cjk-decimal
          |cjk-earthly-branch|cjk-heavenly-stem|cjk-ideographic
          |decimal-leading-zero|decimal|devanagari|disc|disclosure-closed
          |disclosure-open|ethiopic-numeric|georgian|gujarati|gurmukhi|hebrew
          |hiragana-iroha|hiragana|japanese-formal|japanese-informal|kannada
          |katakana-iroha|katakana|khmer|korean-hangul-formal
          |korean-hanja-formal|korean-hanja-informal|lao|lower-alpha
          |lower-armenian|lower-greek|lower-latin|lower-roman|malayalam
          |mongolian|myanmar|oriya|persian|simp-chinese-formal
          |simp-chinese-informal|square|tamil|telugu|thai|tibetan
          |trad-chinese-formal|trad-chinese-informal|upper-alpha|upper-armenian
          |upper-latin|upper-roman
        )\b
    - comment: font-variant-ligatures values
      name: support.constant.property-value.less
      match: (?i)\b(no-)?((common|discretionary|historical)-ligatures|contextual)\b
    - comment: font-variant-caps values
      name: support.constant.property-value.less
      match: (?i)\b((all-)?(small|petite)-caps|unicase|titling-caps)\b
    - comment: animation values
      name: support.constant.property-value.less
      match: \b(alternate(-reverse)?|backwards|both|forwards|infinite|paused|reverse|running|linear|ease(-in)?(-out)?|step-(start|end))\b
    - comment: background values
      name: support.constant.property-value.less
      match: \b(scroll|local|text|(no-)?repeat(-(x|y))?|space|round|contain|cover)\b
    - comment: shared values (values which are valid for multiple properties but have
        different meanings)
      name: support.constant.property-value.less
      match: |-
        (?x)\b(
          fixed
          |bottom|center|left|right|top
          |border-box|content-box|padding-box|margin-box
        )\b
    - name: support.constant.property-value.less
      match: |-
        (?x)\b(
           active
          |add
          |all-scroll
          |all
          |alphabetic
          |alpha
          |always
          |annotation
          |antialiased
          |at
          |autohiding-scrollbar
          |auto
          |avoid-column
          |avoid-page
          |avoid-region
          |avoid
          |background-color
          |background-image
          |background-position
          |background-size
          |background
          |balance
          |baseline
          |below
          |bevel
          |bicubic
          |bidi-override
          |blink
          |block-lineh-height
          |block
          |blur
          |bold
          |bolder
          |bottom
          |box
          |box-shadow
          |break-all
          |break-word
          |brightness
          |butt
          |button
          |capitalize
          |center
          |central
          |char
          |character-variant
          |clip
          |clone
          |close-quote
          |closest-corner
          |closest-side
          |col-resize
          |collapse
          |color
          |color-stop
          |color-burn
          |color-dodge
          |column-count
          |column-gap
          |column-reverse
          |column-rule
          |column-rule-color
          |column-rule-width
          |column-width
          |columns
          |column
          |condensed
          |consider-shifts
          |contain
          |content-box
          |contents
          |content
          |contrast
          |cover
          |crisp-edges
          |crispEdges
          |crop
          |crosshair
          |cross
          |darken
          |dashed
          |default
          |dense
          |diagonal-fractions
          |difference
          |disabled
          |disregard-shifts
          |distribute-all-lines
          |distribute-letter
          |distribute-space
          |distribute
          |dotted
          |double
          |drop-shadow
          |nwse-resize
          |nesw-resize
          |ns-resize
          |ew-resize
          |sw-resize
          |se-resize
          |nw-resize
          |ne-resize
          |w-resize
          |s-resize
          |e-resize
          |n-resize
          |ease-in-out
          |ease-in
          |ease-out
          |ease
          |element
          |ellipsis
          |embed
          |end
          |EndColorStr
          |evenodd
          |exclude-ruby
          |exclude
          |exclusion
          |expanded
          |extra-condensed
          |semi-condensed
          |ultra-condensed
          |extra-expanded
          |semi-expanded
          |ultra-expanded
          |farthest-side
          |farthest-corner
          |fill-box
          |fill-opacity
          |fill
          |filter
          |flat
          |flex-basis
          |flexbox
          |flex-end
          |flex-grow
          |flex-shrink
          |flex-start
          |flex
          |flip
          |flood-color
          |font-size
          |font-size-adjust
          |font-stretch
          |font-weight
          |font
          |from-image
          |from
          |full-width
          |geometricPrecision
          |glyphs
          |gradient
          |grayscale
          |grid-height
          |grid
          |groove
          |hand
          |hanging
          |hard-light
          |height
          |help
          |hidden
          |hide
          |historical-forms
          |horizontal-tb
          |horizontal
          |hue
          |ideographic
          |ideograph-alpha
          |ideograph-numeric
          |ideograph-parenthesis
          |ideograph-space
          |inactive
          |include-ruby
          |inherit
          |initial
          |inline-block
          |inline-box
          |inline-flexbox
          |inline-flex
          |inline-line-height
          |inline-table
          |inline
          |inset
          |inside
          |intersect
          |inter-ideograph
          |inter-word
          |invert
          |isolate
          |isolation
          |italic
          |jis04
          |jis78
          |jis83
          |jis90
          |justify-all
          |justify-content
          |justify-items
          |justify-self
          |justify
          |keep-all
          |larger
          |large
          |last
          |layout
          |left
          |letter-spacing
          |lighter
          |lighten
          |lighting-color
          |line-edge
          |line-height
          |line-through
          |line
          |linear-gradient
          |linearRGB
          |linear
          |lining-nums
          |list-item
          |local
          |loose
          |lowercase
          |lr-tb
          |ltr
          |luminosity
          |luminance
          |manual
          |manipulation
          |margin-bottom
          |margin-box
          |margin-left
          |margin-right
          |margin-top
          |margin
          |marker-offset
          |markers
          |marker
          |mathematical
          |max-content
          |max-height
          |max-lines
          |max-size
          |max-width
          |medium
          |middle
          |min-content
          |min-height
          |min-width
          |miter
          |mixed
          |move
          |multiply
          |newspaper
          |no-close-quote
          |no-open-quote
          |no-change
          |no-clip
          |no-drop
          |no-repeat
          |none
          |nonzero
          |normal
          |not-allowed
          |nowrap
          |oblique
          |offset-after
          |offset-before
          |offset-end
          |offset-start
          |offset
          |oldstyle-nums
          |opacity
          |open-quote
          |optimizeLegibility
          |optimizeSpeed
          |optimizeQuality
          |optimizePrecision
          |order
          |ordinal
          |ornaments
          |outline-color
          |outline-offset
          |outline-width
          |outline
          |outset
          |outside
          |overline
          |over-edge
          |overlay
          |padding-bottom
          |padding-box
          |padding-left
          |padding-right
          |padding-top
          |padding
          |page
          |painted
          |paused
          |pan-x
          |pan-y
          |pan-left
          |pan-right
          |pan-up
          |pan-down
          |perspective-origin
          |pixelated
          |pointer
          |pinch-zoom
          |pre-line
          |pre-wrap
          |pre
          |preserve-3d
          |progid:DXImageTransform.Microsoft.Alpha
          |progid:DXImageTransform.Microsoft.Blur
          |progid:DXImageTransform.Microsoft.dropshadow
          |progid:DXImageTransform.Microsoft.gradient
          |progid:DXImageTransform.Microsoft.Shadow
          |progress
          |proportional-nums
          |proportional-width
          |radial-gradient
          |recto
          |region
          |repeat-x
          |repeat-y
          |repeat
          |repeating-linear-gradient
          |repeating-radial-gradient
          |repeating-conic-gradient
          |replaced
          |reset-size
          |ridge
          |right
          |round
          |row-resize
          |row-reverse
          |row
          |rtl
          |ruby
          |running
          |saturation
          |saturate
          |screen
          |scroll-position
          |scrollbar
          |separate
          |sepia
          |scale-down
          |shape-image-threshold
          |shape-margin
          |shape-outside
          |show
          |sideways-lr
          |sideways-rl
          |sideways
          |simplified
          |size
          |slashed-zero
          |slice
          |smaller
          |small
          |smooth
          |snap
          |solid
          |soft-light
          |space-around
          |space-between
          |space-evenly
          |space
          |span
          |sRGB
          |stacked-fractions
          |stack
          |startColorStr
          |start
          |step-end
          |step-start
          |stop-color
          |stop-opacity
          |stretch
          |strict
          |stroke-box
          |stroke-dasharray
          |stroke-dashoffset
          |stroke-miterlimit
          |stroke-opacity
          |stroke-width
          |stroke
          |styleset
          |style
          |stylistic
          |subgrid
          |subpixel-antialiased
          |subtract
          |sub
          |super
          |swash
          |table-caption
          |table-cell
          |table-column-group
          |table-footer-group
          |table-header-group
          |table-row-group
          |table-column
          |table-row
          |table
          |tabular-nums
          |tb-rl
          |text-bottom
          |text-top
          |text-decoration-color
          |text-emphasis-color
          |text-indent
          |text-over-edge
          |text-under-edge
          |text-shadow
          |text-size-adjust
          |text-size
          |text-top
          |textfield
          |text
          |thick
          |thin
          |titling-case
          |top
          |to
          |touch
          |traditional
          |transform-origin
          |transform
          |under-edge
          |underline
          |unicase
          |unset
          |uppercase
          |upright
          |use-glyph-orientation
          |use-script
          |verso
          |vertical-align
          |vertical-ideographic
          |vertical-lr
          |vertical-rl
          |vertical-text
          |vertical
          |view-box
          |viewport-fill-opacity
          |viewport-fill
          |visibility
          |visibleFill
          |visiblePainted
          |visibleStroke
          |visible
          |wait
          |wavy
          |weight
          |whitespace
          |device-width
          |width
          |word-spacing
          |wrap-reverse
          |wrap
          |xx-large
          |xx-small
          |x-large
          |x-small
          |z-index
          |zero
          |zoom
          |zoom-in
          |zoom-out
        )\b
    - name: support.constant.font-name.less
      match: \b(?i:sans-serif|serif|monospace|fantasy|cursive)\b(?=\s*[;,\n}])

  property-values:
    patterns:
    - include: '#comment-block'
    - include: '#vendor-prefix'
    - include: '#builtin-functions'
    - include: '#color-functions'
    - include: '#less-math'
    - include: '#less-functions'
    - include: '#less-variables'
    - include: '#unicode-range'
    - include: '#numeric-values'
    - include: '#color-values'
    - include: '#property-value-constants'
    - include: '#literal-string'
    - name: keyword.other.important.less
      match: (\!)\s*important
      captures:
        '1': {name: punctuation.separator.less}

  pseudo-classes:
    patterns:
    - name: entity.other.attribute-name.pseudo-class.less
      begin: (:)(dir|lang)(?=\()
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      captures:
        '1': {name: punctuation.definition.entity.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#unquoted-string'
    - name: entity.other.attribute-name.pseudo-class.less
      begin: (:)(not)(?=\()
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      captures:
        '1': {name: punctuation.definition.entity.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#selectors'
    - name: meta.function-call.less
      begin: (:)(nth(-last)?-(child|of-type))(?=\()
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      captures:
        '1': {name: punctuation.definition.entity.less}
        '2': {name: entity.other.attribute-name.pseudo-class.less}
      patterns:
      - name: meta.group.less
        begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: keyword.other.pseudo-class.less
          match: \b(even|odd)\b
        - name: constant.numeric.less
          match: (?:[-+]?(?:\d+)?(n)(\s*[-+]\s*\d+)?|[-+]?\s*\d+)
          captures:
            '1': {name: keyword.other.unit.less}
        - include: '#less-math'
        - include: '#less-strings'
        - include: '#less-variable-interpolation'
    - name: entity.other.attribute-name.pseudo-class.less
      begin: (:)(host-context)(?=\()
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      captures:
        '1': {name: punctuation.definition.entity.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#selectors'
    - name: meta.function-call.less
      match: (:)(active|any|checked|default|disabled|empty|enabled|first(-(child|of-type))?|fullscreen|focus|host|hover|indeterminate|in-range|invalid|last-(child|of-type)|left|link|only-(child|of-type)|optional|out-of-range|read-(only|write)|required|right|root|scope|target|valid|visited)
      captures:
        '1': {name: punctuation.definition.entity.less}
        '2': {name: entity.other.attribute-name.pseudo-class.less}

  pseudo-elements:
    patterns:
    - name: entity.other.attribute-name.pseudo-class.less
      begin: (::)(slotted)(?=\()
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      captures:
        '1': {name: punctuation.definition.entity.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#selectors'
    - name: entity.other.attribute-name.pseudo-element.less
      match: (?:(:{1,2})(?:before|after|first-line|first-letter)|(::)(-(?:moz|ms|webkit)-)?(?:(-?(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)))\b
      captures:
        '1': {name: punctuation.definition.entity.less}
        '2': {name: punctuation.definition.entity.less}
        '3': {name: support.type.vendor-prefix.less}

  qualified-name:
    match: (?:(-?(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)|(\*))?([|])(?!=)
    captures:
      '1': {name: entity.name.constant.less}
      '2': {name: entity.name.namespace.wildcard.less}
      '3': {name: punctuation.separator.namespace.less}

  regexp-function:
    name: support.function.regexp.less
    begin: \b(regexp)(?=\()
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - name: meta.function-call.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#literal-string'

  rule-list:
    patterns:
    - name: meta.property-list.less
      begin: \{
      beginCaptures:
        '0': {name: punctuation.definition.block.begin.less}
      end: (?=\s*\})
      patterns:
      - match: \s*(;)|(?=[})])
        captures:
          '1': {name: punctuation.terminator.rule.less}
      - include: '#rule-list-body'
      - include: '#less-extend'

  rule-list-body:
    patterns:
    - include: '#comment-block'
    - include: '#comment-line'
    - include: '#at-rules'
    - include: '#less-variable-assignment'
    - include: '#less-variable-interpolation'
    - begin: (?=\s*@\{)
      end: \s*(;)
      endCaptures:
        '1': {name: punctuation.terminator.rule.less}
      patterns:
      - name: variable.other.readwrite.less
        match: (@)(\{)([-\w]+)(\})
        captures:
          '1': {name: punctuation.definition.variable.less}
          '2': {name: punctuation.definition.expression.less}
          '3': {name: support.other.variable.less}
          '4': {name: punctuation.definition.expression.less}
      - include: '#property-value'
      - include: '#property-values'
    - begin: (?=[-a-z])
      end: $|(?![-a-z])
      patterns:
      - include: '#vendor-prefix'
      - include: '#custom-property-name'
      - include: '#filter-function'
      - comment: border properties
        begin: |-
          (?x)\b(
            border-(block|inline)(-(start|end))?(-(color|style|width))?
            | border-(left|right)(-(color|style|width))?
            | border-(bottom|top)(-(color|style|width|(left|right)-radius))?
            | border(-(collapse|color|radius|spacing|style|width))
            | border-((end|start)-){2}radius
            | border-image(-(outset|repeat|slice|source|width))?
            | border
          )\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - include: '#property-value'
        - include: '#property-values'
      - comment: invalid custom property (ex. var-property)
        name: invalid.deprecated.custom-property.less
        match: \b(var-)(-?(?:[[-\w][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[_a-zA-Z][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)(?=\s)
        captures:
          '1': {name: keyword.other.custom-property.prefix.less}
          '2': {name: support.type.custom-property.name.less}
      - comment: font, font-family
        name: meta.property-name.less
        begin: \bfont(-family)?(?!-)\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - match: (((\+_?)?):)([\s\t]*)
          captures:
            '1': {name: punctuation.separator.key-value.less}
            '4': {name: meta.property-value.less}
        - include: '#property-values'
        - name: string.unquoted.less
          match: -?(?:[[_a-zA-Z][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*(\s+-?(?:[[_a-zA-Z][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)*
        - name: punctuation.separator.less
          match: ','
      - comment: animation, animation-delay, animation-direction, animation-duration,
          animation-fill-mode, animation-iteration-count, animation-name, animation-play-state,
          animation-timing-function
        begin: \banimation(-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function))?\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - contentName: meta.property-value.less
          begin: (((\+_?)?):)(?=[\s\t]*)
          beginCaptures:
            '1': {name: punctuation.separator.key-value.less}
          end: (?=\s*(;)|(?=[})]))
          captures:
            '1': {name: punctuation.definition.arbitrary-repetition.less}
          patterns:
          - name: support.constant.property-value.less
            match: |-
              (?x)\b(
                linear
              | ease-in
              | ease-out
              | ease-in-out
              | step-start
              | step-end
              | none
              | forwards
              | backwards
              | both
              | normal
              | alternate-reverse
              | alternate
              | reverse
              | running
              | paused
              )\b
          - include: '#cubic-bezier-function'
          - include: '#steps-function'
          - include: '#type-time'
          - include: '#type-number'
          - name: variable.other.constant.animation-name.less
            match: -?(?:[_a-zA-Z]|[^\x{00}-\x{7F}]|(?:(:?\\[0-9a-f]{1,6}(\r\n|\s)?)|\\[^\r\n\f0-9a-f]))(?:[-_a-zA-Z0-9]|[^\x{00}-\x{7F}]|(?:(:?\\[0-9a-f]{1,6}(\r\n|\s)?)|\\[^\r\n\f0-9a-f]))*
          - include: '#literal-string'
          - include: '#property-values'
          - match: \s*(?:(,))
      - comment: transition, transition-property, transition-duration, transition-delay,
          transition-timing-function
        begin: \b(transition(-(property|duration|delay|timing-function))?)\b
        beginCaptures:
          '0': {name: meta.property-name.less}
          '1': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - match: (((\+_?)?):)([\s\t]*)
          captures:
            '1': {name: punctuation.separator.key-value.less}
            '4': {name: meta.property-value.less}
        - include: '#type-time'
        - include: '#property-values'
        - include: '#cubic-bezier-function'
        - include: '#steps-function'
        - match: \s*(?:(,))
          captures:
            '1': {name: punctuation.definition.arbitrary-repetition.less}
      - comment: backdrop-filter, filter
        name: meta.property-name.less
        begin: \b(?:backdrop-)?filter\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - match: (((\+_?)?):)([\s\t]*)
          captures:
            '1': {name: punctuation.separator.key-value.less}
            '4': {name: meta.property-value.less}
        - name: meta.property-value.less
          match: \b(inherit|initial|unset|none)\b
        - include: '#filter-functions'
      - comment: will-change
        name: meta.property-name.less
        begin: \bwill-change\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - match: (((\+_?)?):)([\s\t]*)
          captures:
            '1': {name: punctuation.separator.key-value.less}
            '4': {name: meta.property-value.less}
        - name: invalid.illegal.property-value.less
          match: unset|initial|inherit|will-change|auto|scroll-position|contents
        - name: support.constant.property-value.less
          match: -?(?:[[-\w][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[_a-zA-Z][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*
        - match: \s*(?:(,))
          captures:
            '1': {name: punctuation.definition.arbitrary-repetition.less}
      - comment: counter-increment
        name: meta.property-name.less
        begin: \bcounter-(increment|(re)?set)\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - match: (((\+_?)?):)([\s\t]*)
          captures:
            '1': {name: punctuation.separator.key-value.less}
            '4': {name: meta.property-value.less}
        - name: entity.name.constant.counter-name.less
          match: -?(?:[[-\w][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[_a-zA-Z][^\x{00}-\x{9f}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*
        - include: '#type-integer'
        - name: invalid.illegal.property-value.less
          match: unset|initial|inherit|auto
      - comment: background
        name: meta.property-name.less
        begin: |-
          (?xi)\b(
              background-size
            | background-repeat-y
            | background-repeat-x
            | background-repeat
            | background-position-y
            | background-position-x
            | background-position
            | background-origin
            | background-image
            | background-color
            | background-clip
            | background-blend-mode
            | background-attachment
            | background
            )\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - include: '#property-value'
        - include: '#property-values'
      - comment: all other properties
        begin: |-
          (?x)\b(
            accent-height
            | align-content
            | align-items
            | align-self
            | all
            | animation-timing-function
            | animation-play-state
            | animation-name
            | animation-iteration-count
            | animation-fill-mode
            | animation-duration
            | animation-direction
            | animation-delay
            | animation
            | appearance
            | ascent
            | azimuth
            | backface-visibility
            | begin
            | bias
            | blend-mode
            | bottom
            | box-(align|decoration-break|direction|flex|ordinal-group|orient|pack|shadow|sizing)
            | break-(after|before|inside)
            | caption-side
            | clear
            | color
            | columns
            | column-(break-before|count|fill|gap|(rule(-(color|style|width))?)|span|width)
            | contain
            | content
            | counter-(increment|reset)
            | cursor
            | direction
            | display
            | divisor
            | dur
            | elevation
            | empty-cells
            | end
            | fallback
            | flex(-(align|basis|direction|flow|grow|item-align|line-pack|negative|order|pack|positive|preferred-size|shrink|wrap))?
            | float
            | font-display
            | font-family
            | font-feature-settings
            | font-kerning
            | font-language-override
            | font-size(-adjust)?
            | font-smoothing
            | font-stretch
            | font-style
            | font-synthesis
            | font-variant(-(alternates|caps|east-asian|ligatures|numeric|position))?
            | font-weight
            | font
            | fr
            | grid-(area|gap)
            | grid-auto-(columns|flow|rows)
            | grid-(column|row)(-(end|gap|start))?
            | grid-template(-(areas|columns|rows))?
            | height
            | hyphens
            | image-(orientation|resolution)
            | isolation
            | justify-content
            | left
            | letter-spacing
            | line-(box-contain|break|clamp|height)
            | list-style(-(image|position|type))?
            | margin(-(bottom|left|right|top))?
            | mask(-(clip||composite|image|origin|position|repeat|size|type))?
            | (max|min)-(height|width)
            | mix-blend-mode
            | nbsp-mode
            | negative
            | object-(fit|position)
            | opacity
            | operator
            | order
            | orphans
            | outline(-(color|offset|style|width))?
            | overflow(-(scrolling|wrap|x|y))?
            | pad(ding(-(bottom|left|right|top))?)?
            | page(-break-(after|before|inside))?
            | paint-order
            | pause(-(after|before))?
            | perspective(-origin(-(x|y))?)?
            | pitch(-range)?
            | position
            | prefix
            | quotes
            | range
            | resize
            | right
            | rotate
            | scale
            | scroll-behavior
            | shape-(image-threshold|margin|outside)
            | size
            | speak(-as)?
            | src
            | suffix
            | symbols
            | system
            | tab-size
            | table-layout
            | tap-highlight-color
            | text-align(-last)?
            | text-decoration(-(color|line|style))?
            | text-emphasis(-(color|position|style))?
            | text-(fill-color|height|indent|justify|orientation|overflow|shadow|transform|underline-position)
            | top
            | touch-action
            | transform(-origin(-(x|y))?)
            | transform(-style)?
            | transition(-(delay|duration|property|timing-function))?
            | translate
            | unicode-(bidi|range)
            | user-(drag|select)
            | vertical-align
            | visibility
            | white-space
            | widows
            | width
            | will-change
            | word-(break|spacing|wrap)
            | writing-mode
            | z-index
            | zoom
          )\b
        beginCaptures:
          '0': {name: support.type.property-name.less}
        end: \s*(;)|(?=[})])
        endCaptures:
          '1': {name: punctuation.terminator.rule.less}
        patterns:
        - include: '#property-value'
        - include: '#property-values'
      - include: $self
    - contentName: meta.property-value.less
      begin: \b(((\+_?)?):)([\s\t]*)
      beginCaptures:
        '1': {name: punctuation.separator.key-value.less}
        '4': {name: meta.property-value.less}
      end: (\;)|(?=[})])
      endCaptures:
        '1': {name: punctuation.terminator.rule.less}
      patterns:
      - include: '#property-values'
    - include: $self

  selector:
    patterns:
    - contentName: meta.selector.less
      begin: (?=[>~+/\.*#a-zA-Z\[&]|(\:{1,2}[^\s])|@\{)
      end: (?=@(?!\{)|[{;])
      patterns:
      - include: '#comment-line'
      - include: '#selectors'
      - include: '#less-namespace-accessors'
      - include: '#less-variable-interpolation'
      - name: keyword.other.important.less
        match: (\!)\s*important
        captures:
          '1': {name: punctuation.separator.less}

  selectors:
    patterns:
    - name: entity.name.tag.custom.less
      match: \b([a-z](?:(?:[-_a-z0-9\x{00B7}]|\\\.|[[\x{00C0}-\x{00D6}][\x{00D8}-\x{00F6}][\x{00F8}-\x{02FF}][\x{0300}-\x{037D}][\x{037F}-\x{1FFF}][\x{200C}-\x{200D}][\x{203F}-\x{2040}][\x{2070}-\x{218F}][\x{2C00}-\x{2FEF}][\x{3001}-\x{D7FF}][\x{F900}-\x{FDCF}][\x{FDF0}-\x{FFFD}][\x{10000}-\x{EFFFF}]]))*-(?:(?:[-_a-z0-9\x{00B7}]|\\\.|[[\x{00C0}-\x{00D6}][\x{00D8}-\x{00F6}][\x{00F8}-\x{02FF}][\x{0300}-\x{037D}][\x{037F}-\x{1FFF}][\x{200C}-\x{200D}][\x{203F}-\x{2040}][\x{2070}-\x{218F}][\x{2C00}-\x{2FEF}][\x{3001}-\x{D7FF}][\x{F900}-\x{FDCF}][\x{FDF0}-\x{FFFD}][\x{10000}-\x{EFFFF}]]))*)\b
    - name: entity.name.tag.less
      match: |-
        (?x)\b(
          a
        | abbr
        | acronym
        | address
        | area
        | article
        | aside
        | audio
        | b
        | base
        | bdi
        | bdo
        | big
        | blockquote
        | body
        | br
        | button
        | canvas
        | caption
        | center
        | cite
        | code
        | col
        | colgroup
        | data
        | datalist
        | dd
        | del
        | details
        | dfn
        | dialog
        | dir
        | div
        | dl
        | dt
        | em
        | embed
        | fencedframe
        | fieldset
        | figcaption
        | figure
        | font
        | footer
        | form
        | frame
        | frameset
        | h1
        | h2
        | h3
        | h4
        | h5
        | h6
        | head
        | header
        | hgroup
        | hr
        | html
        | i
        | iframe
        | img
        | input
        | ins
        | kbd
        | label
        | legend
        | li
        | link
        | main
        | map
        | mark
        | marquee
        | menu
        | menuitem
        | meta
        | meter
        | nav
        | nobr
        | noframes
        | noscript
        | object
        | ol
        | optgroup
        | option
        | output
        | p
        | param
        | picture
        | plaintext
        | portal
        | pre
        | progress
        | q
        | rp
        | rt
        | rtc
        | ruby
        | s
        | samp
        | script
        | search
        | section
        | select
        | slot
        | small
        | source
        | span
        | strike
        | strong
        | style
        | sub
        | summary
        | sup
        | table
        | tbody
        | td
        | template
        | textarea
        | tfoot
        | th
        | thead
        | time
        | title
        | tr
        | track
        | tt
        | u
        | ul
        | var
        | video
        | wbr
        | xmp
        )\b
    - name: entity.other.attribute-name.class.less
      begin: (\.)
      beginCaptures:
        '1': {name: punctuation.definition.entity.less}
      end: (?![-\w]|[^\x{00}-\x{9f}]|\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\@(?=\{)))
      patterns:
      - include: '#less-variable-interpolation'
    - name: entity.other.attribute-name.id.less
      begin: \#
      beginCaptures:
        '0': {name: punctuation.definition.entity.less}
      end: (?![-\w]|[^\x{00}-\x{9f}]|\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\@(?=\{)))
      patterns:
      - include: '#less-variable-interpolation'
    - name: entity.other.attribute-name.parent.less
      contentName: entity.other.attribute-name.parent.less
      begin: (&)
      beginCaptures:
        '1': {name: punctuation.definition.entity.less}
      end: (?![-\w]|[^\x{00}-\x{9f}]|\\([A-Fa-f0-9]{1,6} ?|[^A-Fa-f0-9])|(\@(?=\{)))
      patterns:
      - include: '#less-variable-interpolation'
      - include: '#selectors'
    - include: '#pseudo-elements'
    - include: '#pseudo-classes'
    - include: '#less-extend'
    - name: punctuation.separator.combinator.less
      match: (?!\+_?:)(?:>{1,3}|[~+])(?![>~+;}])
    - name: invalid.illegal.combinator.less
      match: ((?:>{1,3}|[~+])){2,}
    - name: invalid.illegal.combinator.less
      match: \/deep\/
    - name: meta.attribute-selector.less
      begin: \[
      end: \]
      captures:
        '0': {name: punctuation.definition.entity.less}
      patterns:
      - include: '#less-variable-interpolation'
      - include: '#qualified-name'
      - name: entity.other.attribute-name.less
        match: (-?(?:[[_a-zA-Z][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))(?:[[-\w][^\x{00}-\x{7F}]]|(?:\\\h{1,6}\s?|\\[^\n\f\h]))*)
      - begin: \s*([~*|^$]?=)\s*
        end: (?=(\s|\]))
        captures:
          '1': {name: keyword.operator.attribute-selector.less}
        patterns:
        - include: '#less-variable-interpolation'
        - name: string.unquoted.less
          match: '[^\s\]\[''"]'
        - include: '#literal-string'
        - match: (?:\s+([iI]))?
          captures:
            '1': {name: keyword.other.less}
        - name: punctuation.definition.entity.less
          match: \]
    - match: \s*(?:(,))
      captures:
        '1': {name: punctuation.definition.arbitrary-repetition.less}
    - name: entity.name.tag.wildcard.less
      match: \*

  shape-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(rect)(?=\()
      beginCaptures:
        '0': {name: support.function.shape.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: support.constant.property-value.less
          match: \bauto\b
        - include: '#type-length'
        - include: '#comma-delimiter'
    - name: meta.function-call.less
      begin: \b(inset)(?=\()
      beginCaptures:
        '0': {name: support.function.shape.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: keyword.other.less
          match: \bround\b
        - include: '#type-length'
        - include: '#type-percentage'
    - name: meta.function-call.less
      begin: \b(circle|ellipse)(?=\()
      beginCaptures:
        '0': {name: support.function.shape.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: keyword.other.less
          match: \bat\b
        - name: support.constant.property-value.less
          match: \b(top|right|bottom|left|center|closest-side|farthest-side)\b
        - include: '#type-length'
        - include: '#type-percentage'
    - name: meta.function-call.less
      begin: \b(polygon)(?=\()
      beginCaptures:
        '0': {name: support.function.shape.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - name: support.constant.property-value.less
          match: \b(nonzero|evenodd)\b
        - include: '#type-length'
        - include: '#type-percentage'

  steps-function:
    name: meta.function-call.less
    begin: \b(steps)(?=\()
    beginCaptures:
      '0': {name: support.function.timing.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - include: '#comma-delimiter'
      - include: '#type-integer'
      - name: support.keyword.timing-direction.less
        match: (end|middle|start)

  string-content:
    patterns:
    - include: '#less-variable-interpolation'
    - name: constant.character.escape.newline.less
      match: \\\s*\n
    - name: constant.character.escape.less
      match: \\(\h{1,6}|.)

  symbols-function:
    name: meta.function-call.less
    begin: \b(symbols)(?=\()
    beginCaptures:
      '1': {name: support.function.counter.less}
    end: \)
    endCaptures:
      '0': {name: punctuation.definition.group.end.less}
    patterns:
    - begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: (?=\))
      patterns:
      - name: support.constant.symbol-type.less
        match: \b(cyclic|numeric|alphabetic|symbolic|fixed)\b
      - include: '#comma-delimiter'
      - include: '#literal-string'
      - include: '#type-image'

  transform-functions:
    patterns:
    - name: meta.function-call.less
      begin: \b(matrix3d|scale3d|matrix|scale)(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-number'
        - include: '#less-variables'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(translate(3d)?)(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-percentage'
        - include: '#type-length'
        - include: '#type-number'
        - include: '#less-variables'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(translate[XY])(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-percentage'
        - include: '#type-length'
        - include: '#type-number'
        - include: '#less-variables'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(rotate[XYZ]?|skew[XY])(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-angle'
        - include: '#less-variables'
        - include: '#calc-function'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(skew)(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-angle'
        - include: '#less-variables'
        - include: '#calc-function'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(translateZ|perspective)(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#type-length'
        - include: '#less-variables'
        - include: '#calc-function'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(rotate3d)(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-angle'
        - include: '#type-number'
        - include: '#less-variables'
        - include: '#calc-function'
        - include: '#var-function'
    - name: meta.function-call.less
      begin: \b(scale[XYZ])(?=\()
      beginCaptures:
        '0': {name: support.function.transform.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#type-number'
        - include: '#less-variables'
        - include: '#calc-function'
        - include: '#var-function'

  type-angle:
    name: constant.numeric.less
    match: (?i:[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(deg|grad|rad|turn))\b
    captures:
      '1': {name: keyword.other.unit.less}

  type-frequency:
    name: constant.numeric.less
    match: (?i:[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(Hz|kHz))\b
    captures:
      '1': {name: keyword.other.unit.less}

  type-image:
    patterns:
    - include: '#cross-fade-function'
    - include: '#gradient-functions'
    - include: '#image-function'
    - include: '#url-function'

  type-integer:
    name: constant.numeric.less
    match: (?:[-+]?\d+)

  type-length:
    name: constant.numeric.less
    match: 0|(?:[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(em|ex|ch|rem|vw|vh|vmin|vmax|(c|m)?m|q|in|pt|pc|px|fr))\b
    captures:
      '1': {name: keyword.other.unit.less}

  type-number:
    name: constant.numeric.less
    match: '[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))'

  type-percentage:
    name: constant.numeric.less
    match: '[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(%)'
    captures:
      '1': {name: keyword.other.unit.less}

  type-resolution:
    name: constant.numeric.less
    match: (?i:[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(dpi|dpcm|dppx))\b
    captures:
      '1': {name: keyword.other.unit.less}

  type-time:
    name: constant.numeric.less
    match: (?i:[-+]?(?:(?:\d*\.\d+(?:[eE](?:[-+]?\d+))*)|(?:[-+]?\d+))(s|ms))\b
    captures:
      '1': {name: keyword.other.unit.less}

  unicode-range:
    name: support.unicode-range.less
    match: (?i)(u\+)([0-9a-f?]{1,6}(?:(-)[0-9a-f]{1,6})?)
    captures:
      '1': {name: support.constant.unicode-range.prefix.less}
      '2': {name: constant.codepoint-range.less}
      '3': {name: punctuation.section.range.less}

  unquoted-string:
    name: string.unquoted.less
    match: '[^\s''"]'

  url-function:
    name: meta.function-call.less
    begin: \b(url)(?=\()
    beginCaptures:
      '1': {name: support.function.url.less}
    end: (?<=\))
    patterns:
    - name: meta.group.less
      begin: \(
      beginCaptures:
        '0': {name: punctuation.definition.group.begin.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - include: '#less-variables'
      - include: '#literal-string'
      - include: '#unquoted-string'
      - include: '#var-function'

  var-function:
    patterns:
    - name: meta.function-call.less
      begin: \b(var)(?=\()
      beginCaptures:
        '1': {name: support.function.var.less}
      end: \)
      endCaptures:
        '0': {name: punctuation.definition.group.end.less}
      patterns:
      - begin: \(
        beginCaptures:
          '0': {name: punctuation.definition.group.begin.less}
        end: (?=\))
        patterns:
        - include: '#comma-delimiter'
        - include: '#custom-property-name'
        - include: '#less-variables'
        - include: '#property-values'

  vendor-prefix:
    name: support.type.vendor-prefix.less
    match: -(?:webkit|moz(-osx)?|ms|o)-
foldingStartMarker: /\*\*(?!\*)|\{\s*($|/\*(?!.*?\*/.*\S))
foldingStopMarker: (?<!\*)\*\*/|^\s*\}
keyEquivalent: ^~L
